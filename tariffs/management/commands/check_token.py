from django.core.management.base import BaseCommand
from django.conf import settings
import requests


class Command(BaseCommand):
    help = '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å Telegram —Ç–æ–∫–µ–Ω–∞'

    def handle(self, *args, **options):
        token = getattr(settings, 'TELEGRAM_BOT_TOKEN', '')

        if not token:
            self.stdout.write("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
            return

        self.stdout.write(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞: {token[:10]}...")

        url = f"https://api.telegram.org/bot{token}/getMe"

        try:
            response = requests.get(url, timeout=10)
            if response.status_code == 200:
                data = response.json()
                if data.get('ok'):
                    bot_info = data['result']
                    self.stdout.write("‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω!")
                    self.stdout.write(f"   –ò–º—è –±–æ—Ç–∞: {bot_info['first_name']}")
                    self.stdout.write(f"   Username: @{bot_info['username']}")
                    self.stdout.write(f"   ID –±–æ—Ç–∞: {bot_info['id']}")
                else:
                    self.stdout.write("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω!")
                    self.stdout.write(f"   –û—à–∏–±–∫–∞: {data.get('description')}")
            else:
                self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}")

        except requests.exceptions.RequestException as e:
            self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")