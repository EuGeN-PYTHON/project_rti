from django.core.management.base import BaseCommand
from django.conf import settings
import requests
import time


class Command(BaseCommand):
    help = '–ü–æ–ª—É—á–∏—Ç—å chat_id –∏–∑ Telegram'

    def handle(self, *args, **options):
        token = getattr(settings, 'TELEGRAM_BOT_TOKEN', '')

        if not token:
            self.stdout.write("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
            self.stdout.write("–î–æ–±–∞–≤—å—Ç–µ –≤ settings.py: TELEGRAM_BOT_TOKEN = '–≤–∞—à_—Ç–æ–∫–µ–Ω'")
            return

        self.stdout.write("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram...")
        self.stdout.write("üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∞—à–µ–º—É –±–æ—Ç—É –≤ Telegram")

        url = f"https://api.telegram.org/bot{token}/getUpdates"

        try:
            response = requests.get(url, timeout=10)
            if response.status_code == 200:
                data = response.json()

                if data.get('ok') and data.get('result'):
                    for update in data['result']:
                        if 'message' in update:
                            chat_id = update['message']['chat']['id']
                            chat_type = update['message']['chat']['type']
                            chat_title = update['message']['chat'].get('title', '–õ–∏—á–Ω—ã–π —á–∞—Ç')

                            self.stdout.write(f"\n‚úÖ –ù–∞–π–¥–µ–Ω chat_id:")
                            self.stdout.write(f"   CHAT_ID: {chat_id}")
                            self.stdout.write(f"   –¢–∏–ø: {chat_type}")
                            self.stdout.write(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {chat_title}")

                            if chat_type == 'private':
                                self.stdout.write(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update['message']['chat']['first_name']}")

                            self.stdout.write(f"\nüìã –î–æ–±–∞–≤—å—Ç–µ –≤ settings.py:")
                            self.stdout.write(f"TELEGRAM_CHAT_ID = '{chat_id}'")
                            return

                    self.stdout.write("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                else:
                    self.stdout.write("‚ùå –ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            else:
                self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}: {response.text}")

        except requests.exceptions.RequestException as e:
            self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        except Exception as e:
            self.stdout.write(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")