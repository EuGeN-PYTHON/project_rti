import requests
import json
from django.conf import settings
from django.utils import timezone
import logging

logger = logging.getLogger(__name__)


def send_new_lead_notification(lead):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –≤ Telegram —á–∞—Ç
    """
    logger.info(f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ #{lead.id} –≤ Telegram")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    telegram_bot_token = getattr(settings, 'TELEGRAM_BOT_TOKEN', '')
    telegram_chat_id = getattr(settings, 'TELEGRAM_CHAT_ID', '')

    if not telegram_bot_token:
        logger.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ settings.py")
        return False

    if not telegram_chat_id:
        logger.error("‚ùå TELEGRAM_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ settings.py")
        return False

    logger.info(f"üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram: TOKEN={telegram_bot_token[:10]}..., CHAT_ID={telegram_chat_id}")

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
    moscow_time = timezone.localtime(lead.created_at)

    # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–±–∏–ª—å–Ω–æ–π —Å–≤—è–∑–∏
    mobile_details = []
    if lead.tariff.mobile_data > 0:
        mobile_details.append(f"üìä *–ú–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç:* {lead.tariff.mobile_data} –ì–ë")
    if lead.tariff.mobile_minutes > 0:
        mobile_details.append(f"üéß *–ú–∏–Ω—É—Ç—ã:* {lead.tariff.mobile_minutes}")
    if lead.tariff.mobile_sms > 0:
        mobile_details.append(f"üí¨ *SMS:* {lead.tariff.mobile_sms}")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –±–ª–æ–∫ –º–æ–±–∏–ª—å–Ω–æ–π —Å–≤—è–∑–∏
    mobile_info = ""
    if mobile_details:
        mobile_info = "\n".join(mobile_details) + "\n"
    else:
        mobile_info = "üì± *–ú–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å:* ‚ùå\n"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ
    message = f"""
üö® *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê*

üë§ *–§–ò–û:* {lead.fio}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {lead.phone}
üè† *–ê–¥—Ä–µ—Å:* {lead.address}
üìç *–†–µ–≥–∏–æ–Ω:* {lead.region.name if hasattr(lead.region, 'name') else lead.region}

üìä *–¢–∞—Ä–∏—Ñ:* {lead.tariff.name}
üí∞ *–¶–µ–Ω–∞:* {lead.tariff.price} ‚ÇΩ/–º–µ—Å
‚ö° *–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞:* {lead.tariff.speed or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}

üì∫ *–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¢–í:* {'‚úÖ' if lead.tariff.interactive_tv else '‚ùå'}
üé¨ *–û–Ω–ª–∞–π–Ω-–∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä:* {'‚úÖ' if lead.tariff.online_cinema else '‚ùå'}

{mobile_info}
üîó *ID –∑–∞—è–≤–∫–∏:* {lead.id}
‚è∞ *–°–æ–∑–¥–∞–Ω–∞:* {moscow_time.strftime('%d.%m.%Y %H:%M')} (–ú–°–ö)
üìä *–°—Ç–∞—Ç—É—Å:* –ù–æ–≤–∞—è

üí° *–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø–∞–Ω–µ–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞*
    """

    url = f"https://api.telegram.org/bot{telegram_bot_token}/sendMessage"

    payload = {
        'chat_id': telegram_chat_id,
        'text': message,
        'parse_mode': 'Markdown',
        'disable_web_page_preview': True
    }

    try:
        logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –∫ Telegram API...")
        response = requests.post(url, json=payload, timeout=10)

        logger.info(f"üì© –û—Ç–≤–µ—Ç –æ—Ç Telegram: {response.status_code}")

        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ #{lead.id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!")
                return True
            else:
                error_msg = result.get('description', 'Unknown error')
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {error_msg}")
                return False
        else:
            logger.error(f"‚ùå HTTP –æ—à–∏–±–∫–∞ {response.status_code}: {response.text}")
            return False

    except requests.exceptions.RequestException as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


def send_lead_to_telegram(lead):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ Telegram —á–∞—Ç —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º (–ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É)
    """
    logger.info(f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ #{lead.id} –≤ Telegram")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    telegram_bot_token = getattr(settings, 'TELEGRAM_BOT_TOKEN', '')
    telegram_chat_id = getattr(settings, 'TELEGRAM_CHAT_ID', '')

    if not telegram_bot_token:
        logger.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ settings.py")
        return False

    if not telegram_chat_id:
        logger.error("‚ùå TELEGRAM_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ settings.py")
        return False

    logger.info(f"üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram: TOKEN={telegram_bot_token[:10]}..., CHAT_ID={telegram_chat_id}")

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
    created_moscow = timezone.localtime(lead.created_at)
    updated_moscow = timezone.localtime(lead.updated_at)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–∞—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å null)
    installation_date_info = ""
    if lead.installation_date:
        installation_moscow = timezone.localtime(lead.installation_date)
        installation_date_info = f"üìÖ *–î–∞—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞:* {installation_moscow.strftime('%d.%m.%Y %H:%M')} (–ú–°–ö)"
    else:
        installation_date_info = "üìÖ *–î–∞—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞:* –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è —É—Ç–æ—á–Ω–∏—Ç—å)"

    # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–±–∏–ª—å–Ω–æ–π —Å–≤—è–∑–∏
    mobile_details = []
    if lead.tariff.mobile_data > 0:
        mobile_details.append(f"üìä *–ú–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç:* {lead.tariff.mobile_data} –ì–ë")
    if lead.tariff.mobile_minutes > 0:
        mobile_details.append(f"üéß *–ú–∏–Ω—É—Ç—ã:* {lead.tariff.mobile_minutes}")
    if lead.tariff.mobile_sms > 0:
        mobile_details.append(f"üí¨ *SMS:* {lead.tariff.mobile_sms}")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –±–ª–æ–∫ –º–æ–±–∏–ª—å–Ω–æ–π —Å–≤—è–∑–∏
    mobile_info = ""
    if mobile_details:
        mobile_info = "\n".join(mobile_details) + "\n"
    else:
        mobile_info = "üì± *–ú–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å:* ‚ùå\n"

    message = f"""
üìã *–ó–ê–Ø–í–ö–ê –ü–ï–†–ï–î–ê–ù–ê –ü–†–û–í–ê–ô–î–ï–†–£*

üë§ *–§–ò–û:* {lead.fio}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {lead.phone}
üè† *–ê–¥—Ä–µ—Å:* {lead.address}
üìç *–†–µ–≥–∏–æ–Ω:* {lead.region.name if hasattr(lead.region, 'name') else lead.region}

üìä *–¢–∞—Ä–∏—Ñ:* {lead.tariff.name}
üí∞ *–¶–µ–Ω–∞:* {lead.tariff.price} ‚ÇΩ/–º–µ—Å
‚ö° *–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞:* {lead.tariff.speed or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}

üì∫ *–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¢–í:* {'‚úÖ' if lead.tariff.interactive_tv else '‚ùå'}
üé¨ *–û–Ω–ª–∞–π–Ω-–∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä:* {'‚úÖ' if lead.tariff.online_cinema else '‚ùå'}

{mobile_info}
{installation_date_info}
üë®‚Äçüíº *–û–ø–µ—Ä–∞—Ç–æ—Ä:* {lead.operator.username if lead.operator else '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}

üîó *ID –∑–∞—è–≤–∫–∏:* {lead.id}
‚è∞ *–°–æ–∑–¥–∞–Ω–∞:* {created_moscow.strftime('%d.%m.%Y %H:%M')} (–ú–°–ö)
üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–∞:* {updated_moscow.strftime('%d.%m.%Y %H:%M')} (–ú–°–ö)

üí° *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:* –î–∞—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞ –±—É–¥–µ—Ç —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
    """

    url = f"https://api.telegram.org/bot{telegram_bot_token}/sendMessage"

    payload = {
        'chat_id': telegram_chat_id,
        'text': message,
        'parse_mode': 'Markdown',
        'disable_web_page_preview': True
    }

    try:
        logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram API...")
        response = requests.post(url, json=payload, timeout=10)

        logger.info(f"üì© –û—Ç–≤–µ—Ç –æ—Ç Telegram: {response.status_code}")

        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                logger.info(f"‚úÖ –ó–∞—è–≤–∫–∞ #{lead.id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!")
                lead.is_transferred_to_telegram = True
                lead.save()
                return True
            else:
                error_msg = result.get('description', 'Unknown error')
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {error_msg}")
                return False
        else:
            logger.error(f"‚ùå HTTP –æ—à–∏–±–∫–∞ {response.status_code}: {response.text}")
            return False

    except requests.exceptions.RequestException as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


def send_operator_notification(lead, operator_name, action):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    """
    logger.info(f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–π—Å—Ç–≤–∏–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ #{lead.id}")

    telegram_bot_token = getattr(settings, 'TELEGRAM_BOT_TOKEN', '')
    telegram_chat_id = getattr(settings, 'TELEGRAM_CHAT_ID', '')

    if not telegram_bot_token or not telegram_chat_id:
        return False

    moscow_time = timezone.localtime(timezone.now())

    action_messages = {
        'taken': f"üë®‚Äçüíº *–û–ø–µ—Ä–∞—Ç–æ—Ä {operator_name} –≤–∑—è–ª –∑–∞—è–≤–∫—É –≤ —Ä–∞–±–æ—Ç—É*",
        'updated': f"‚úèÔ∏è *–û–ø–µ—Ä–∞—Ç–æ—Ä {operator_name} –æ–±–Ω–æ–≤–∏–ª –∑–∞—è–≤–∫—É*",
        'completed': f"‚úÖ *–û–ø–µ—Ä–∞—Ç–æ—Ä {operator_name} –∑–∞–≤–µ—Ä—à–∏–ª –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–∫–∏*"
    }

    message = f"""
{action_messages.get(action, 'üîî *–î–µ–π—Å—Ç–≤–∏–µ —Å –∑–∞—è–≤–∫–æ–π*')}

üë§ *–ö–ª–∏–µ–Ω—Ç:* {lead.fio}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {lead.phone}
üîó *ID –∑–∞—è–≤–∫–∏:* {lead.id}
üìä *–°—Ç–∞—Ç—É—Å:* {lead.get_status_display()}
‚è∞ *–í—Ä–µ–º—è:* {moscow_time.strftime('%d.%m.%Y %H:%M')} (–ú–°–ö)
    """

    url = f"https://api.telegram.org/bot{telegram_bot_token}/sendMessage"

    payload = {
        'chat_id': telegram_chat_id,
        'text': message,
        'parse_mode': 'Markdown',
        'disable_web_page_preview': True
    }

    try:
        response = requests.post(url, json=payload, timeout=10)
        return response.status_code == 200
    except:
        return False


def send_error_notification(error_message, context=None):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
    """
    telegram_bot_token = getattr(settings, 'TELEGRAM_BOT_TOKEN', '')
    telegram_chat_id = getattr(settings, 'TELEGRAM_CHAT_ID', '')

    if not telegram_bot_token or not telegram_chat_id:
        return False

    moscow_time = timezone.localtime(timezone.now())

    message = f"""
üö® *–û–®–ò–ë–ö–ê –í –°–ò–°–¢–ï–ú–ï*

‚è∞ *–í—Ä–µ–º—è:* {moscow_time.strftime('%d.%m.%Y %H:%M')} (–ú–°–ö)
‚ùå *–û—à–∏–±–∫–∞:* {error_message}
    """

    if context:
        message += f"\nüìã *–ö–æ–Ω—Ç–µ–∫—Å—Ç:* {context}"

    url = f"https://api.telegram.org/bot{telegram_bot_token}/sendMessage"

    payload = {
        'chat_id': telegram_chat_id,
        'text': message,
        'parse_mode': 'Markdown',
        'disable_web_page_preview': True
    }

    try:
        response = requests.post(url, json=payload, timeout=10)
        return response.status_code == 200
    except:
        return False